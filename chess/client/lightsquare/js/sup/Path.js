// Generated by LiveScript 1.5.0
(function(){
  var split$ = ''.split, join$ = [].join;
  define(function(require){
    return {
      parse: function(path){
        return split$.call(path, " ");
      },
      build: function(parts){
        return join$.call(parts, " ");
      },
      prefix: function(path, prefix, parent, child){
        var object;
        object = parent;
        return prefix.split(" ").map(function(token){
          var index, field;
          if (token === "@") {
            index = object.indexOf(child);
            object = child;
            return index;
          } else if (token[0] === "#") {
            field = token.substr(1);
            return "#" + field + "=" + child[field];
          } else {
            object = object[token];
            return token;
          }
        }).join(" ") + (path ? " " + path : "");
      },
      traverse: function(path, root){
        var step;
        step = {
          parent: null,
          index: null,
          object: root
        };
        if (path) {
          path.split(" ").forEach(function(token){
            var ref$, key, value, object, i$, len$, i, item;
            if (token[0] === "#") {
              ref$ = token.substr(1).split("="), key = ref$[0], value = ref$[1];
              object = null;
              for (i$ = 0, len$ = (ref$ = step.object).length; i$ < len$; ++i$) {
                i = i$;
                item = ref$[i$];
                if (item[key].toString() === value) {
                  object = item;
                  step = {
                    parent: step.object,
                    index: i,
                    object: object
                  };
                  break;
                }
              }
              if (object === null) {
                throw "Path traversal failed - no matching object for " + token;
              }
            } else {
              return step = {
                parent: step.object,
                index: token,
                object: step.object[token]
              };
            }
          });
        }
        return step;
      }
    };
  });
}).call(this);
