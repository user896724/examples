// Generated by LiveScript 1.5.0
(function(){
  define(function(require){
    var Path, Sup, Promise, Proxy;
    Path = require('sup/Path');
    Sup = require('sup/Sup');
    Promise = require('rsvp/rsvp').Promise;
    return Proxy = (function(){
      Proxy.displayName = 'Proxy';
      var prototype = Proxy.prototype, constructor = Proxy;
      function Proxy(_socket, channel){
        this._socket = _socket;
        this._channel = "/sup" + channel;
      }
      Proxy.prototype.init = function(Class, sendInitMessage){
        var this$ = this;
        sendInitMessage == null && (sendInitMessage = false);
        return new Promise(function(fulfill, reject){
          var buffer, object;
          buffer = [];
          object = null;
          this$._subscribe("/update", function(arg$){
            var type, path, value;
            type = arg$.type, path = arg$.path, value = arg$.value;
            if (object) {
              return object.update(type, path, value);
            } else {
              return buffer.push({
                type: type,
                path: path,
                value: value
              });
            }
          });
          this$._subscribe("/init", function(initialData){
            object = new Class(initialData);
            fulfill(object);
            return buffer.forEach(function(arg$){
              var type, path, value;
              type = arg$.type, path = arg$.path, value = arg$.value;
              return object.publish(type, path, value);
            });
          });
          if (sendInitMessage) {
            return this$._send("/init");
          }
        });
      };
      Proxy.prototype.cancel = function(){
        return this._send("/unsubscribe");
      };
      Proxy.prototype._send = function(channel, data){
        return this._socket.emit(this._channel + channel, data);
      };
      Proxy.prototype._subscribe = function(channel, fn){
        return this._socket.on(this._channel + channel, fn);
      };
      return Proxy;
    }());
  });
}).call(this);
